@model CurrencySelectorModel
@using System.Net;
@using Microsoft.AspNetCore.Http;
@inject IWebHelper webHelper
@inject IHttpContextAccessor httpContextAccessor
@if (Model.AvailableCurrencies.Count > 1)
{

    <div class="currency-selector d-none d-lg-block pr-1">
         @{   var currencies = Model.AvailableCurrencies.Select(x => new
             {
                 Name = x.Name,
                 Text = x.CurrencyCode,
                 Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeCurrency", new { customercurrency = x.Id }), "returnurl=" + WebUtility.UrlEncode(webHelper.GetRawUrl(httpContextAccessor.HttpContext.Request)), null),
                 Selected = x.Id.Equals(Model.CurrentCurrencyId)
             });
            <div class="btn-group btn-group-sm float-xs-right">
                <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown">
                    @currencies.FirstOrDefault(x => x.Selected).Text
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                    <ul class="pl-0 mb-0">
                        @foreach (var item in currencies)
                        {
                            var className = item.Selected ? "active" : "";
                            <li class="@className">
                                <a href="@item.Value">@item.Text</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
    <div class="col px-0 currency-list-mobile option-list-mobile text-center">
        <h6 class="currency-button mobile-option-button mb-0">Currency</h6>
        <ul class="">
            @foreach (var item in currencies)
            {
                var className = item.Selected ? "active" : "";
                <li class="@className">
                    <a class="nav-link d-flex d-lg-none p-0" href="@item.Value">
                        @item.Text
                    </a>
                </li>
            }
        </ul>
    </div>
}
