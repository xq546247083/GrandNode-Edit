@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject IPermissionService permissionService
@inject CommonSettings commonSettings
@inject CustomerSettings customerSettings
@inject LocalizationSettings localizationSettings
@inject AdminAreaSettings adminAreaSettings

@using System.Text.Encodings.Web
@using Grand.Core.Domain.Customers
@using Grand.Framework.UI;
@using Grand.Core;
@using Grand.Core.Domain.Localization
@using Grand.Services.Security;
@using Grand.Core.Domain.Common;
@using Microsoft.AspNetCore.Routing;
@{
    var currentCustomer = this.WorkContext.CurrentCustomer;
    var usernamesEnabled = customerSettings.UsernamesEnabled;
    var currentVersion = GrandVersion.CurrentVersion;
    var kendoVersion = "2018.1.503";
    var supportRtl = workContext.WorkingLanguage.Rtl &&
        !localizationSettings.IgnoreRtlPropertyForAdminArea;

    Html.AppendCssFileParts("~/administration/styles.css", excludeFromBundle: true);

    //CSS
    if (supportRtl)
    {
        Html.AppendCssFileParts(string.Format("~/content/kendo/{0}/kendo.rtl.min.css", kendoVersion), excludeFromBundle: true);
    }
    Html.AppendCssFileParts($"~/content/kendo/{kendoVersion}/kendo.{adminAreaSettings.KendoLayout}.min.css", excludeFromBundle: true);
    Html.AppendCssFileParts(string.Format("~/content/kendo/{0}/kendo.common.min.css", kendoVersion), excludeFromBundle: true);
    Html.AppendCssFileParts("~/content/jquery-ui-themes/smoothness/jquery-ui-1.10.3.custom.min.css", excludeFromBundle: true);
    Html.AddScriptParts("~/content/tinymce/tinymce.min.js", excludeFromBundle: true);
    if (supportRtl)
    {
        Html.AppendCssFileParts("~/administration/global/css/plugins-rtl.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/layout/themes/darkblue-rtl.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/layout/custom-rtl.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/layout/layout-rtl.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/global/css/components-rtl.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/bootstrap/css/bootstrap-rtl.min.css", excludeFromBundle: true);
    }
    else
    {
        Html.AppendCssFileParts("~/administration/global/css/plugins.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts($"~/administration/layout/themes/{(adminAreaSettings.AdminLayout != null ? adminAreaSettings.AdminLayout.ToLowerInvariant() : "Default")}.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/layout/custom.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/layout/layout.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/global/css/components.min.css", excludeFromBundle: true);
        Html.AppendCssFileParts("~/administration/bootstrap/css/bootstrap.min.css", excludeFromBundle: true);
    }

    Html.AppendCssFileParts("~/administration/bootstrap/css/daterangepicker.min.css", excludeFromBundle: true);
    Html.AppendCssFileParts("~/administration/simple-line-icons/simple-line-icons.min.css", excludeFromBundle: true);
    Html.AppendCssFileParts("~/administration/font-awesome/css/font-awesome.min.css", excludeFromBundle: true);

    //js
    Html.AppendScriptParts(string.Format("~/scripts/kendo/{0}/cultures/kendo.culture.{1}.min.js", kendoVersion, "en-US"), excludeFromBundle: true);
    Html.AppendScriptParts(string.Format("~/scripts/kendo/{0}/cultures/kendo.culture.{1}.min.js", kendoVersion, @System.Globalization.CultureInfo.CurrentCulture.Name), excludeFromBundle: true);
    Html.AppendScriptParts(string.Format("~/scripts/kendo/{0}/kendo.grid.js", kendoVersion), excludeFromBundle: true);
    Html.AppendScriptParts(string.Format("~/scripts/kendo/{0}/kendo.ui.core.js", kendoVersion), excludeFromBundle: true);
    Html.AppendScriptParts("~/scripts/admin.common.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/scripts/jquery-ui-1.12.1.custom/jquery-ui.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/scripts/jquery.validate.unobtrusive.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/scripts/jquery.validate.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/scripts/admin.search.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/scripts/typeahead.js", excludeFromBundle: true);

    Html.AppendScriptParts("~/administration/layout/js/layout.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/administration/global/js/jquery.cookieBar.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/administration/global/js/app.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/administration/bootstrap/js/daterangepicker.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/administration/global/js/moment.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/administration/bootstrap/js/bootstrap.min.js", excludeFromBundle: true);
    Html.AppendScriptParts("~/administration/global/js/jquery.min.js", excludeFromBundle: true);


    //page title
    string adminPageTitle = "";
    if (!String.IsNullOrWhiteSpace(ViewBag.Title))
    {
        adminPageTitle = ViewBag.Title + " / ";
    }
    adminPageTitle += T("Admin.PageTitle").Text;

    //has "Manage Maintenance" permission?
    var canManageMaintenance = permissionService.Authorize(StandardPermissionProvider.ManageMaintenance);

    //X-UA-Compatible tag
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts(string.Format("<meta http-equiv=\"X-UA-Compatible\" content=\"{0}\"/>", commonSettings.XuaCompatibleValue));
    }

}
<!DOCTYPE html>
<html @if (supportRtl) { <text> dir="rtl" </text> }>
<head>
    <title>@adminPageTitle</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    @Html.GrandHeadCustom()
    @Html.GrandCssFiles(this.Url, ResourceLocation.Head, false)
    @Html.GrandScripts(this.Url, ResourceLocation.Head, false)
</head>
<body class="page-header-fixed page-sidebar-closed-hide-logo page-content-white">
    <vc:admin-widget widget-zone="admin_header_before" additional-data="null" />
    @if (IsSectionDefined("header"))
    {
        @RenderSection("header")
    }
    else
    {
        <vc:admin-widget widget-zone="header_before" additional-data="null" />
        <div class="page-header navbar navbar-fixed-top">
            <div class="page-header-inner ">
                <div class="page-logo">
                    <a href="~/Admin">
                        <img src="~/administration/images/logo.png" alt="logo" class="logo-default" />
                    </a>
                    <div class="menu-toggler sidebar-toggler">
                        <span></span>
                    </div>
                    <vc:admin-widget widget-zone="header_toggle_after" additional-data="null" />
                </div>
                <a href="javascript:;" class="menu-toggler responsive-toggler" data-toggle="collapse" data-target=".navbar-collapse">
                    <span></span>
                </a>
                <div class="top-menu">
                    <vc:admin-widget widget-zone="header_navbar_before" additional-data="null" />
                    <ul class="nav navbar-nav pull-right">
                        @await Component.InvokeAsync("CommonLanguageSelector")
                        <li class="dropdown" id="header_inbox_bar">
                            <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                                <i class="icon-settings"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-default">
                                @if (canManageMaintenance)
                                {
                                    <li>
                                        <a href="@webHelper.ModifyQueryString(Url.Action("ClearCache", "Common", new RouteValueDictionary { { "area", "Admin" } }), "returnurl=" + System.Net.WebUtility.UrlEncode(webHelper.GetRawUrl(this.Context.Request)), null)">
                                            <i class="icon-refresh"></i>
                                            @T("Admin.Header.ClearCache")
                                        </a>
                                    </li>
                                    <li>
                                        <a href="@webHelper.ModifyQueryString(Url.Action("RestartApplication", "Common", new RouteValueDictionary { { "area", "Admin" } }), "returnurl=" + System.Net.WebUtility.UrlEncode(webHelper.GetRawUrl(this.Context.Request)), null)" id="restart-application">
                                            <i class="icon-reload"></i>
                                            @T("Admin.Header.RestartApplication")
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>
                        <li class="dropdown dropdown-user">
                            <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                                <img alt="" class="img-circle" src="~/administration/layout/img/avatar.png" />
                                <span class="username username-hide-on-mobile">
                                    @if (currentCustomer != null && currentCustomer.IsRegistered())
                                    {
                                        @(usernamesEnabled ? currentCustomer.Username : currentCustomer.Email)
                                    }
                                </span>
                                <i class="fa fa-angle-down"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-default">
                                <li>
                                    <a href="@Url.Action("Edit", "Customer", new { id = currentCustomer.Id, area = "Admin" })">
                                        <i class="icon-user"></i> @T("Admin.Header.Profile")
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Logout", "Customer", new { area = "" }, null)">
                                        <i class="icon-logout"></i> @T("Admin.Header.Logout")
                                    </a>
                                </li>
                                <li>
                                    <vc:admin-widget widget-zone="header_middle" additional-data="null" />
                                </li>
                            </ul>
                        </li>
                        <li class="dropdown" id="header_inbox_bar">
                            <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                                <i class="icon-info"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-default">
                                <li>
                                    <a href="http://docs.grandnode.com/" target="_blank">
                                        <i class="icon-book-open"></i>
                                        @T("Admin.Header.Documentation")
                                    </a>
                                </li>
                                <li>
                                    <a href="http://grandnode.com/boards" target="_blank">
                                        <i class="icon-bubbles"></i>
                                        @T("Admin.Header.Community")
                                    </a>
                                </li>
                                <li>
                                    <a href="javascript:;">
                                        <i class="fa fa-dot-circle-o"></i> grandnode @currentVersion
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li class="dropdown">
                            <a href="@Url.Action("Index", "Home", new { area = "" })" class="dropdown-toggle" style="padding-right:10px">
                                <i class="icon-home"></i>
                            </a>
                        </li>
                    </ul>
                    <vc:admin-widget widget-zone="header_navbar_after" additional-data="null" />
                </div>
            </div>
            @if (currentCustomer.IsAdmin())
            {
                <div class="input-group admin-search-input-container">
                    <input id="searchInput" type="text" class="form-control" placeholder="@T("Admin.AdminSearch.Placeholder")">
                    <script>
                        $(document).ready(function () {
                            Admin.Search.init("@(Url.Action("Search", "AdminSearch"))");
                        });
                    </script>
                </div>
            }
        </div>
        <vc:admin-widget widget-zone="header_after" additional-data="null" />
    }
    <vc:admin-widget widget-zone="admin_header_after" additional-data="null" />
    <div class="clearfix"> </div>
    <div class="page-container">
        <div class="page-content-wrapper">
            @if (IsSectionDefined("headermenu"))
            {
                @RenderSection("headermenu")
            }
            else
            {
                <partial name="Menu" />
            }

            @if (IsSectionDefined("statusbar"))
            {
                @RenderSection("statusbar")
            }
            <div class="page-content">
                <partial name="Notifications" />
                @RenderBody()
            </div>
            <div class="throbber">
                <div class="curtain">
                </div>
                <div class="curtain-content">
                    <div>
                        <h1 class="throbber-header">Wait...</h1>
                        <div class="spinner active">
                            <svg style="width:100px; height:100px" viewBox="0 0 64 64">
                                <circle cx="32" cy="32" r="29" fill="none" stroke-width="3" stroke-miterlimit="10"></circle>
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.GrandCssFiles(this.Url, ResourceLocation.Footer)
    @Html.GrandScripts(this.Url, ResourceLocation.Footer)
    <div class="page-footer">
        <div class="page-footer-inner">
            <a href="https://grandnode.com/" target="_blank">2018 © Powered by GrandNode.</a>
        </div>
        <div class="scroll-to-top">
            <i class="icon-arrow-up"></i>
        </div>
    </div>
    <script>
            $(document).ready(function () {
                $("#restart-application").click(function (e) {
                    event.preventDefault();
                    showThrobber('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Admin.Header.RestartApplication.Progress").Text))');
                    $("html, body").animate({ scrollTop: 0 }, 400);
                    $.get($(this).attr("href"), function (data) { });
                    setTimeout(function () {
                        location.reload();
                    }, 10000);
                });
            });
    </script>
</body>
</html>